use crate::ast::*;
grammar;

pub CommandList: CommandList = {
    <cp:Command*> => CommandList(cp)
}

Command: Command = {
    <t:Ident> "::" "RemoveColumn" "(" <c:Ident> ")" =>
        Command::RemoveColumn {table: t, col: c}
}
// Func: Func = {
//     <i:Ident> "->" <e:Expr> => Func {
//         param: i,
//         expr: e
//     }
// }

Ident: String = {
    <s:r"[a-zA-Z]\w*"> => s.to_string()
}

// Path: Vec<String> = {
//     <v:(<Ident> ".")*> <i:Ident?> => match i {
//         None => v,
//         Some(i) => {
//             let mut v = v;
//             v.push(i);
//             v
//         }
//     }
// }
